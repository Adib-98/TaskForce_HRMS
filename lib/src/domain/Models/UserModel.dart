import 'dart:convert';

class UserModel {
  String userID;
  String name;
  String email;
  String password;
  String photoID;
  String lastLogin;
  String phoneNumber;
  String address;

  UserModel({
    required this.userID,
    required this.name,
    required this.email,
    required this.password,
    required this.photoID,
    required this.lastLogin,
    required this.phoneNumber,
    required this.address,
  });

  // Convert UserModel object to a MAP that can be serialized to JSON
  Map<String, dynamic> toJson() {
    return {
      'userID': userID,
      'name': name,
      'photoID': photoID,
      'email': email,
      'password': password,
      'lastLogin': lastLogin,
      'address': address,
      'phoneNumber': phoneNumber,
    };
  }


  factory UserModel.loadingUser() {
    return UserModel(
      userID: "",
      name: "Loading",
      photoID: // sample photo
      "/9j/4AAQSkZJRgABAQEBLAEsAAD/4QBWRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAABAAAARgEoAAMAAAABAAIAAAITAAMAAAABAAEAAAAAAAAAAAEsAAAAAQAAASwAAAAB/+0ALFBob3Rvc2hvcCAzLjAAOEJJTQQEAAAAAAAPHAFaAAMbJUccAQAAAgAEAP/hDIFodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0n77u/JyBpZD0nVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkJz8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0nYWRvYmU6bnM6bWV0YS8nIHg6eG1wdGs9J0ltYWdlOjpFeGlmVG9vbCAxMC4xMCc+CjxyZGY6UkRGIHhtbG5zOnJkZj0naHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyc+CgogPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9JycKICB4bWxuczp0aWZmPSdodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyc+CiAgPHRpZmY6UmVzb2x1dGlvblVuaXQ+MjwvdGlmZjpSZXNvbHV0aW9uVW5pdD4KICA8dGlmZjpYUmVzb2x1dGlvbj4zMDAvMTwvdGlmZjpYUmVzb2x1dGlvbj4KICA8dGlmZjpZUmVzb2x1dGlvbj4zMDAvMTwvdGlmZjpZUmVzb2x1dGlvbj4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PScnCiAgeG1sbnM6eG1wTU09J2h0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8nPgogIDx4bXBNTTpEb2N1bWVudElEPmFkb2JlOmRvY2lkOnN0b2NrOjdkZGJlZDE3LWNlMmEtNDk2Yi05MjM4LWU5YjMxZWY3YTlhYTwveG1wTU06RG9jdW1lbnRJRD4KICA8eG1wTU06SW5zdGFuY2VJRD54bXAuaWlkOjYwZjRmZWU1LTk2N2EtNDM4ZS1iNDU3LWQwNjExNDU1NmY1MzwveG1wTU06SW5zdGFuY2VJRD4KIDwvcmRmOkRlc2NyaXB0aW9uPgo8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSd3Jz8+/9sAQwAFAwQEBAMFBAQEBQUFBgcMCAcHBwcPCwsJDBEPEhIRDxERExYcFxMUGhURERghGBodHR8fHxMXIiQiHiQcHh8e/9sAQwEFBQUHBgcOCAgOHhQRFB4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e/8AAEQgBaAFoAwERAAIRAQMRAf/EABwAAQACAwEBAQAAAAAAAAAAAAAGBwQFCAMCAf/EAEsQAAEDAwEEBgYGCgADBgcAAAABAgMEBREGBxIhMRNBUWGBkQgicaGxwRQyQlJichUjM0OC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",
      email: "Loading",
      password: "Loading",
      address: "Loading",
      phoneNumber: "Loading",
      lastLogin: 'Loading',
    );
  }

  /// Create a UserModel object from a JSON map
  factory UserModel.fromJson(Map<String, dynamic> json) {
    return UserModel(
      userID: json['userID'],
      name: json['name'],
      photoID: json['photoID'],
      email: json['email'],
      password: json['password'],
      address: json['address'],
      phoneNumber: json['phoneNumber'],
      lastLogin: json['lastLogin'],
    );
  }

  /// Convert the UserModel object to a JSON string
  String toJsonString() {
    Map<String, dynamic> jsonMap = toJson();
    return jsonEncode(jsonMap);
  }

  // Create a UserModel object from a JSON string
  factory UserModel.fromJsonString(String jsonString) {
    Map<String, dynamic> jsonMap = jsonDecode(jsonString);
    return UserModel.fromJson(jsonMap);
  }
}
